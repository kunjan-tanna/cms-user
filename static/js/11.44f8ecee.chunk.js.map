{"version":3,"sources":["views/pages/comments/addComment.js","redux/actions/comments/index.js","views/pages/comments/rpComment.js","views/pages/blogs/viewBlog.js","redux/actions/rpcomment/index.js"],"names":["AddComment","props","handleInput","event","persist","setState","prevState","formData","target","name","value","console","log","state","handleFormSubmit","formdata","obj","userId","userdata","_id","commentName","postId","addComment","toggleModal","handleReset","erroMsg","userInfo","fname","this","firstName","lname","lastName","sm","className","onSubmit","e","preventDefault","for","type","disabled","id","placeholder","rows","cols","required","onChange","Ripple","color","onClick","React","Component","connect","getCommit","dispatch","a","axios","get","res","payload","data","ViewBlog","addTag","tags","map","x","selectedOption","tagId","y","push","showModal","rpData","replyComment","Adata","rowData","item","rpcommentName","commentId","post","then","filter","toast","error","position","POSITION","BOTTOM_RIGHT","catch","info","commActions","location","categories","likeData","liked","globalActions","tagActions","localActions","categoryId","label","tagData","Fragment","Card","CardBody","Row","Col","md","src","IMG","baseURL","image","alt","height","width","title","description","ReactHtmlParser","content","moment","publishedAt","format","CardHeader","CardTitle","size","Button","outline","index","username","key","col","Media","left","avtar","body","createdAt","Form","FormGroup","Input","Label","Data","href","Modal","isOpen","toggle","ModalHeader","ModalBody","nextProps","updatedObject","length","categoryName","Object","assign","tagName","keys","global","auth","login"],"mappings":"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","file":"static/js/11.44f8ecee.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { Card, CardBody, Row, Col ,Button, Form, Input, Label, FormGroup} from 'reactstrap'\r\nimport { connect } from \"react-redux\"\r\nimport { toast, ToastContainer } from \"react-toastify\"\r\nimport \"react-toastify/dist/ReactToastify.css\"\r\nimport \"../../../assets/scss/plugins/extensions/toastr.scss\"\r\nclass AddComment extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            formData:{},\r\n            erroMsg:false,\r\n            userdata : this.props.userInfo,\r\n            postId : this.props.postId\r\n        }\r\n        console.log('POSTID',this.state.postId)\r\n    }\r\n    //handleInput \r\n  handleInput = (event) => {\r\n    event.persist()\r\n    this.setState((prevState) => ({\r\n      formData: {\r\n        ...prevState.formData,\r\n        [event.target.name]: event.target.value\r\n      }\r\n    }),()=>console.log('Name Input',this.state.formData))\r\n  }\r\n  //Handle Form Submit\r\n  handleFormSubmit = () =>{\r\n    //\r\n    console.log('FORMDATA',this.state.formdata)\r\n    let obj = {userId:this.state.userdata._id,\r\n              commentName:this.state.formData.commentName,\r\n              postId:this.state.postId}\r\n    console.log('OBJEEE',obj)\r\n      // console.log(this.props.addData)\r\n      this.props.addComment(obj)\r\n      //close the model\r\n         this.props.toggleModal()\r\n  }\r\n  componentDidMount() {\r\n    \r\n    // const username = fname+' '+lname\r\n    // console.log('Auther data---',username)\r\n    // this.setState({formData : username},()=>console.log('abababababbasss',this.state.formData))\r\n  }\r\n    \r\n  //handle Reset\r\n  handleReset = ()=>{\r\n    this.setState({formData: {}})\r\n  }\r\n  render(){\r\n    const fname= this.state.userdata.firstName\r\n    const lname = this.state.userdata.lastName\r\n    return (\r\n        <Row>\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <CardBody className=\"pt-2\">\r\n              <Col sm=\"12\">\r\n               <Form\r\n                    onSubmit={(e) => {\r\n                      e.preventDefault()\r\n                      this.handleFormSubmit()\r\n                    }}\r\n                  >\r\n                  <Row>\r\n                    <Col sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label for=\"commentName\">Username</Label>\r\n                        <Input\r\n                          type=\"disabled\"\r\n                          disabled\r\n                          value={fname+' '+lname}\r\n                          id=\"userId\"\r\n                          name=\"userId\"\r\n                          placeholder=\"Username\"\r\n                          //onChange={this.handleInput}\r\n                        //   value={this.state.formData && this.state.formData.categoryName?this.state.formData.categoryName:''}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col sm=\"12\">\r\n                    <FormGroup>\r\n                        <Label for=\"description\">Comments</Label>\r\n                        <Input\r\n                        //value={this.state.formData && this.state.formData.message?this.state.formData.message:''}\r\n                        type=\"textarea\"\r\n                        name=\"commentName\"\r\n                        id=\"commentName\"\r\n                        rows=\"3\"\r\n                        cols=\"3\"\r\n                        required\r\n                        placeholder=\"What are you thinking about?\"\r\n                        onChange={this.handleInput}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col\r\n                      className=\"d-flex justify-content-end flex-wrap mt-2\"\r\n                      sm=\"12\"\r\n                    >\r\n                      <Button.Ripple\r\n                        className=\"mr-1\"\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                       //onClick={this.props.leadId}\r\n                      >\r\n                        Add Comment \r\n                      </Button.Ripple>\r\n                      <ToastContainer />\r\n                      <Button.Ripple color=\"flat-warning\"\r\n                          onClick={() => this.handleReset()}\r\n                          type=\"button\"\r\n                      >Reset</Button.Ripple>\r\n                      </Col>\r\n                  </Row>\r\n                </Form>\r\n              </Col>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n      \r\n    }\r\n  }\r\nexport default connect(mapStateToProps)(AddComment)","import axios from '../../../configs/axiosConfig'\r\n\r\n//Create Add Comment\r\nexport const addCommit = (data) => async (dispatch) => {\r\n  // console.log(\"ADD LEAD\",data)\r\n  const res = await axios.post('create/comment', data)\r\n  // console.log('Res',res)\r\n    return res\r\n}\r\n\r\n//Get Comment\r\nexport const getCommit = () => async (dispatch) => {\r\n  const res = await axios.get('/comment')\r\n  // console.log('Get Leads',res)\r\n  if (res) {\r\n    dispatch({ type: 'COMMENTS', payload: res.data })\r\n  }\r\n  // console.log('Response',res)\r\n  return res\r\n}","import React from \"react\";\r\n\r\nclass AddrpComment extends React.Component {\r\n  render() {\r\n    return <h4>You're UserDashboard.</h4>;\r\n  }\r\n}\r\n\r\nexport default AddrpComment;\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardBody,\r\n  Media,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  FormGroup,\r\n  Form,\r\n  Label,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n} from \"reactstrap\";\r\nimport classnames from \"classnames\";\r\nimport * as Icon from \"react-feather\";\r\nimport * as localActions from \"../../../redux/actions/posts/index\";\r\nimport * as commActions from \"../../../redux/actions/comments/index\";\r\nimport * as rpcommActions from \"../../../redux/actions/rpcomment/index\";\r\nimport * as globalActions from \"../../../redux/actions/categories/index\";\r\nimport * as likeActions from \"../../../redux/actions/likes/index\";\r\nimport * as tagActions from \"../../../redux/actions/tags/index\";\r\nimport AddComment from \"../comments/addComment\";\r\nimport AddrpComment from \"../comments/rpComment\";\r\nimport { connect } from \"react-redux\";\r\nimport { history } from \"../../../history\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport moment from \"moment\";\r\nimport \"../../../assets/scss/pages/app-ecommerce-shop.scss\";\r\nimport { toast } from \"react-toastify\";\r\nimport * as IMG from \"../../../configs/ImgConfig\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../../assets/scss/pages/users.scss\";\r\nimport \"../../../assets/scss/plugins/extensions/toastr.scss\";\r\n\r\nclass ViewBlog extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      postId:\r\n        this.props.location &&\r\n        this.props.location.state &&\r\n        this.props.location.state.postId\r\n          ? this.props.location.state.postId // you will get the edit Id here\r\n          : \"\",\r\n\r\n      categories: [],\r\n      tags: [],\r\n      likeData: [],\r\n      data: [],\r\n      rpData: {},\r\n      userdata: this.props.userInfo,\r\n      showModal: false,\r\n      rowData: [],\r\n      liked: false,\r\n      data: {},\r\n      selectedOption: [],\r\n    };\r\n    console.log(\"--this.props.commentId--\", this.props);\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(globalActions.getCategory());\r\n    this.props.dispatch(tagActions.getTag());\r\n    this.props\r\n      .dispatch(localActions.getPostId(this.state.postId))\r\n      .then((res) => {\r\n        // console.log('BY ID DATA',res.data)\r\n        this.setState({ selectedOption: res.data });\r\n        this.addTag();\r\n      });\r\n\r\n    this.props.dispatch(commActions.getCommit()).then((res) => {\r\n      // console.log('componene',res)\r\n      let rowData = res.data.filter((item) => {\r\n        // console.log('ITEEMMMS',item)\r\n        if (item.postId === this.state.postId) {\r\n          return item;\r\n        }\r\n      });\r\n      // console.log('rowData-----',rowData)\r\n      this.setState({ rowData });\r\n    });\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    const updatedObject = {};\r\n\r\n    // category\r\n    if (\r\n      nextProps.categories &&\r\n      nextProps.categories.length &&\r\n      nextProps.categories !== prevState.categories\r\n    ) {\r\n      const categories = nextProps.categories.map((item) => {\r\n        return {\r\n          label: item.categoryName,\r\n          value: item._id,\r\n          color: \"#7367f0\",\r\n        };\r\n      });\r\n      // console.log('nextprops',nextProps.categories)\r\n      Object.assign(updatedObject, { categories: categories });\r\n    }\r\n    // Tags\r\n    if (\r\n      nextProps.tags &&\r\n      nextProps.tags.length &&\r\n      nextProps.tags !== prevState.tags\r\n    ) {\r\n      const tags = nextProps.tags.map((item) => {\r\n        return {\r\n          label: item.tagName,\r\n          value: item._id,\r\n          //color: '#7367f0'\r\n        };\r\n      });\r\n      // console.log('----nexProps.tag',typeof(nextProps.tags))\r\n      Object.assign(updatedObject, { tags: tags });\r\n    }\r\n    return Object.keys(updatedObject).length !== 0 ? updatedObject : null;\r\n  }\r\n\r\n  addTag = () => {\r\n    // {console.log('----this.value',this.state.selectedOption.tagId)}\r\n    // {console.log('----this.tags',this.state.tags)}\r\n    let tags = [];\r\n    //let key = 1;\r\n    this.state.tags.map((x) => {\r\n      this.state.selectedOption.tagId.map((y) => {\r\n        // console.log(\"------------\",this.state.selectedOption.tagId)\r\n        if (y == x.value) {\r\n          tags.push(x);\r\n        }\r\n      });\r\n    });\r\n    this.setState({\r\n      value: tags,\r\n    });\r\n  };\r\n  toggleModal = () => {\r\n    this.setState((prevState) => ({\r\n      showModal: !prevState.showModal,\r\n    }));\r\n  };\r\n\r\n  //handleInput\r\n  handleInput = (event) => {\r\n    event.persist();\r\n    this.setState((prevState) => ({\r\n      rpData: {\r\n        ...prevState.rpData,\r\n        [event.target.name]: event.target.value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  replyComment = () => {\r\n    const Adata =\r\n      this.state.rowData && this.state.rowData.map((item) => item._id);\r\n    console.log(\"CommentIds\", Adata);\r\n    const obj = {\r\n      userId: this.state.userdata._id,\r\n      rpcommentName: this.state.rpData.rpcommentName,\r\n      postId: this.state.postId,\r\n      commentId: Adata,\r\n    };\r\n    this.props\r\n      .dispatch(rpcommActions.addrpCommit(obj))\r\n      .then((res) => {\r\n        console.log(\"RRRRRR\", res);\r\n\r\n        if (res.data) {\r\n          // //To get all comments\r\n          this.props.dispatch(rpcommActions.getrpCommit()).then((res) => {\r\n            // console.log(\"get data-----------\", res);\r\n\r\n            let data = res.data.filter((item) => {\r\n              console.log(\"ITEEMMMS\", item.commentId);\r\n              console.log(\"Comment ID\", this.state.rowData._id);\r\n              if (item.postId === this.state.postId) {\r\n                if (item.commentId == Adata) {\r\n                  return item;\r\n                }\r\n              }\r\n            });\r\n            console.log(\"ROW data+++++++++++++++\", data);\r\n            this.setState({ data });\r\n          });\r\n        } else {\r\n          // // show error message in Toast\r\n          toast.error(\"Add Catetgory isn't Successfully\", {\r\n            position: toast.POSITION.BOTTOM_RIGHT,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        //   // show error message in Toast\r\n        toast.error(\"Add Comments isn't Successfully\", {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n        });\r\n      });\r\n  };\r\n\r\n  //Add Comment\r\n  addComment = (info) => {\r\n    this.props\r\n      .dispatch(commActions.addCommit(info))\r\n      .then((res) => {\r\n        // console.log('RRRRRR',res)\r\n\r\n        if (res.data) {\r\n          //To get all comments\r\n          this.props.dispatch(commActions.getCommit()).then((res) => {\r\n            // console.log('get data-----------',res)\r\n            let rowData = res.data.filter((item) => {\r\n              // console.log('ITEEMMMS',item)\r\n              if (item.postId === this.state.postId) {\r\n                return item;\r\n              }\r\n            });\r\n            // console.log(\"ROW data+++++++++++++++\",rowData)\r\n            this.setState({ rowData });\r\n          });\r\n        } else {\r\n          // // show error message in Toast\r\n          // toast.error(\"Add Catetgory isn't Successfully\", {\r\n          // position: toast.POSITION.BOTTOM_RIGHT\r\n          // })\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        //   // show error message in Toast\r\n        toast.error(\"Add Comments isn't Successfully\", {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const fname = this.state.userdata.firstName;\r\n    const lname = this.state.userdata.lastName;\r\n    // const label = this.state.data.like ? 'Unlike' : this.state.data.like\r\n    const categories =\r\n      this.state.categories &&\r\n      this.state.categories.filter(\r\n        (item) => item.value === this.state.selectedOption.categoryId\r\n      );\r\n    // console.log('category',this.state.categories)\r\n    const data = categories && categories.map((item) => item.label);\r\n    // console.log('categories', data)\r\n    const tags = this.state.value;\r\n    const tagData = tags && tags.map((item) => item.label);\r\n    return (\r\n      <React.Fragment>\r\n        <Card className=\"overflow-hidden app-ecommerce-details\">\r\n          <CardBody className=\"pb-0\">\r\n            <Row className=\"mb-1 mt-2\">\r\n              <Col\r\n                className=\"d-flex align-items-center justify-content-center mb-2 mb-md-0\"\r\n                sm=\"12\"\r\n                md=\"5\"\r\n              >\r\n                <img\r\n                  src={\r\n                    IMG.default.baseURL + \"/\" + this.state.selectedOption.image\r\n                  }\r\n                  alt=\"Post Image\"\r\n                  height=\"250\"\r\n                  width=\"250\"\r\n                />\r\n              </Col>\r\n              {/* {console.log('selection',this.state.selectedOption)} */}\r\n              <Col md=\"7\" sm=\"12\">\r\n                <h3>{this.state.selectedOption.title}</h3>\r\n                {/* <p className=\"text-muted\">Author by : &nbsp; {this.state.username.firstName+ ' '+this.state.username.lastName}</p> */}\r\n                <div className=\"d-flex flex-wrap\">\r\n                  <h3 className=\"text-primary\">\r\n                    {this.state.selectedOption.description}\r\n                  </h3>\r\n                </div>\r\n                <hr />\r\n                <span>\r\n                  {ReactHtmlParser(this.state.selectedOption.content)}\r\n                </span>\r\n                <hr />\r\n                <Row>\r\n                  <Col>\r\n                    <div>Categories</div>\r\n                    <span>{data}</span>\r\n                  </Col>\r\n                  <Col>\r\n                    <div>Tags</div>\r\n                    <span>{tagData}</span>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <hr />\r\n                <p className=\"my-50\">\r\n                  <span>Published At</span>\r\n                  <span className=\"mx-50\">-</span>\r\n                  <span>\r\n                    {moment(this.state.selectedOption.publishedAt).format(\r\n                      \"YYYY-MM-DD\"\r\n                    )}\r\n                  </span>\r\n                </p>\r\n                {/* <hr />\r\n                <Button.Ripple\r\n                  className=\"mr-1\"\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  //onClick={this.props.leadId}\r\n                >\r\n                  Like\r\n                </Button.Ripple> */}\r\n              </Col>\r\n            </Row>\r\n          </CardBody>\r\n          <Row className=\"item-features\">\r\n            <Col>\r\n              <CardHeader>\r\n                <CardTitle>\r\n                  <Icon.MessageSquare size={20} />\r\n                  &nbsp;Comments\r\n                </CardTitle>\r\n                <div className=\"d-flex flex-wrap\">\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    outline\r\n                    onClick={this.toggleModal}\r\n                  >\r\n                    Add Comments\r\n                  </Button.Ripple>\r\n                </div>\r\n              </CardHeader>\r\n            </Col>\r\n            <Col sm=\"12\">\r\n              {this.state.rowData &&\r\n                this.state.rowData.map((item, index) => {\r\n                  // console.log(\"item\", item);\r\n                  const username =\r\n                    item.userId.firstName + \" \" + item.userId.lastName;\r\n                  return (\r\n                    <Row key={index}>\r\n                      <Col sm=\"12\">\r\n                        <Card>\r\n                          <CardBody>\r\n                            <Row className=\"mx-0\" col=\"12\">\r\n                              <Col className=\"pl-0\" sm=\"12\">\r\n                                <Media className=\"d-sm-flex d-block\">\r\n                                  <Media className=\"mt-md-1 mt-0\" left>\r\n                                    <img\r\n                                      className=\"rounded-circle mt-25\"\r\n                                      src={\r\n                                        IMG.default.baseURL +\r\n                                        \"/\" +\r\n                                        item.userId.avtar\r\n                                      }\r\n                                      height=\"28\"\r\n                                      width=\"28\"\r\n                                      alt=\"User Image\"\r\n                                    />\r\n                                  </Media>\r\n                                  <Media body>\r\n                                    <Row>\r\n                                      <Col sm=\"12\" className={\"mt-2\"}>\r\n                                        <div className=\"users-page-view-table\">\r\n                                          <div className=\"d-flex user-info\">\r\n                                            <div className=\"user-info-title font-weight-bold\">\r\n                                              UserName\r\n                                            </div>\r\n\r\n                                            <div>\r\n                                              <span className=\"text-success\">\r\n                                                {username}\r\n                                              </span>\r\n                                            </div>\r\n                                            {/* {console.log(this.state.selectedOption)} */}\r\n                                          </div>\r\n                                          <div className=\"d-flex user-info\">\r\n                                            <div className=\"user-info-title font-weight-bold\">\r\n                                              {item.commentName}\r\n                                            </div>\r\n                                          </div>\r\n                                          <div className=\"d-flex user-info\">\r\n                                            <div className=\"user-info-title font-weight-bold\">\r\n                                              Created At:\r\n                                            </div>\r\n                                            <div className=\"text-truncate\">\r\n                                              <span>\r\n                                                {moment(item.createdAt).format(\r\n                                                  \"YYYY-MM-DD\"\r\n                                                )}\r\n                                              </span>\r\n                                            </div>\r\n                                          </div>\r\n                                          <div className=\"d-flex user-info\">\r\n                                            <div className=\"user-info-title font-weight-bold\">\r\n                                              <Button.Ripple\r\n                                                size=\"sm\"\r\n                                                color=\"primary\"\r\n                                                type=\"submit\"\r\n                                                //onClick={this.toggleModal1}\r\n                                              >\r\n                                                Reply to\r\n                                              </Button.Ripple>\r\n                                            </div>\r\n                                          </div>\r\n                                          <Row>\r\n                                            <Form\r\n                                              onSubmit={(e) => {\r\n                                                e.preventDefault();\r\n                                                this.replyComment();\r\n                                              }}\r\n                                            >\r\n                                              <Col sm=\"12\">\r\n                                                <Row>\r\n                                                  <Col sm=\"12\">\r\n                                                    <FormGroup>\r\n                                                      <Input\r\n                                                        type=\"disabled\"\r\n                                                        disabled\r\n                                                        value={\r\n                                                          fname + \" \" + lname\r\n                                                        }\r\n                                                        id=\"userId\"\r\n                                                        name=\"userId\"\r\n                                                        placeholder=\"Username\"\r\n                                                        //onChange={this.handleInput}\r\n                                                        //   value={this.state.formData && this.state.formData.categoryName?this.state.formData.categoryName:''}\r\n                                                      />\r\n                                                    </FormGroup>\r\n                                                  </Col>\r\n                                                  <Col sm=\"12\">\r\n                                                    <FormGroup>\r\n                                                      <Input\r\n                                                        type=\"textarea\"\r\n                                                        rows=\"3\"\r\n                                                        name=\"rpcommentName\"\r\n                                                        placeholder=\"Reply a Comment\"\r\n                                                        id=\"add-comment\"\r\n                                                        onChange={\r\n                                                          this.handleInput\r\n                                                        }\r\n                                                      />\r\n                                                    </FormGroup>\r\n                                                  </Col>\r\n                                                  <Col sm=\"12\">\r\n                                                    <FormGroup>\r\n                                                      <Button.Ripple\r\n                                                        size=\"sm\"\r\n                                                        color=\"primary\"\r\n                                                        type=\"submit\"\r\n                                                        //onClick={this.handleClick}\r\n                                                      >\r\n                                                        Post Comment\r\n                                                      </Button.Ripple>\r\n                                                    </FormGroup>\r\n                                                  </Col>\r\n                                                </Row>\r\n                                              </Col>\r\n                                            </Form>\r\n                                          </Row>\r\n                                        </div>\r\n                                      </Col>\r\n                                    </Row>\r\n                                    <hr />\r\n                                    <Label>Reply Section</Label>\r\n\r\n                                    {this.state.Data &&\r\n                                      this.state.Data.map((item, index) => {\r\n                                        const username =\r\n                                          item.userId.firstName +\r\n                                          \" \" +\r\n                                          item.userId.lastName;\r\n                                        return (\r\n                                          <Media className=\"pb-2\" key={index}>\r\n                                            <Media left href=\"#\">\r\n                                              <img\r\n                                                className=\"rounded-circle mt-2\"\r\n                                                src={\r\n                                                  IMG.default.baseURL +\r\n                                                  \"/\" +\r\n                                                  item.userId.avtar\r\n                                                }\r\n                                                height=\"28\"\r\n                                                width=\"28\"\r\n                                                alt=\"User Image\"\r\n                                              />\r\n                                            </Media>\r\n                                            <Media body>\r\n                                              <Row>\r\n                                                <Col sm=\"12\" className={\"mt-2\"}>\r\n                                                  <div className=\"users-page-view-table\">\r\n                                                    <div className=\"d-flex user-info\">\r\n                                                      <div className=\"user-info-title font-weight-bold\">\r\n                                                        UserName\r\n                                                      </div>\r\n\r\n                                                      <div>\r\n                                                        <span className=\"text-success\">\r\n                                                          {username}\r\n                                                        </span>\r\n                                                      </div>\r\n                                                      {/* {console.log(this.state.selectedOption)} */}\r\n                                                    </div>\r\n                                                    <div className=\"d-flex user-info\">\r\n                                                      <div className=\"user-info-title font-weight-bold\">\r\n                                                        {item.rpcommentName}\r\n                                                      </div>\r\n                                                    </div>\r\n                                                    <div className=\"d-flex user-info\">\r\n                                                      <div className=\"user-info-title font-weight-bold\">\r\n                                                        Created At:\r\n                                                      </div>\r\n                                                      <div className=\"text-truncate\">\r\n                                                        <span>\r\n                                                          {moment(\r\n                                                            item.createdAt\r\n                                                          ).format(\r\n                                                            \"YYYY-MM-DD\"\r\n                                                          )}\r\n                                                        </span>\r\n                                                      </div>\r\n                                                    </div>\r\n                                                  </div>\r\n                                                </Col>\r\n                                              </Row>\r\n                                            </Media>\r\n                                          </Media>\r\n                                        );\r\n                                      })}\r\n                                  </Media>\r\n                                </Media>\r\n                              </Col>\r\n                            </Row>\r\n                          </CardBody>\r\n                        </Card>\r\n                      </Col>\r\n                    </Row>\r\n                  );\r\n                })}\r\n            </Col>\r\n          </Row>\r\n          <Modal\r\n            isOpen={this.state.showModal}\r\n            toggle={this.toggleModal}\r\n            className=\"modal-dialog-centered modal-sm\"\r\n          >\r\n            <ModalHeader toggle={this.toggleModal} className=\"bg-primary\">\r\n              Add Comments\r\n            </ModalHeader>\r\n            <ModalBody>\r\n              <AddComment\r\n                toggleModal={this.toggleModal}\r\n                postId={this.state.postId}\r\n                userInfo={this.state.userdata}\r\n                addComment={this.addComment}\r\n              />\r\n            </ModalBody>\r\n          </Modal>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    categories: state.global.categories,\r\n    tags: state.global.tags,\r\n    userInfo: state.auth.login.userInfo,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(ViewBlog);\r\n","import axios from \"../../../configs/axiosConfig\";\r\n\r\n//Create Add rpComment\r\nexport const addrpCommit = (data) => async (dispatch) => {\r\n  // console.log(\"ADD LEAD\",data)\r\n  const res = await axios.post(\"create/rpcomment\", data);\r\n  // console.log('Res',res)\r\n  return res;\r\n};\r\n\r\n//Get rpComment\r\nexport const getrpCommit = () => async (dispatch) => {\r\n  const res = await axios.get(\"/rpcomment\");\r\n  // console.log('Get Leads',res)\r\n  if (res) {\r\n    dispatch({ type: \"RPCOMMENTS\", payload: res.data });\r\n  }\r\n  // console.log('Response',res)\r\n  return res;\r\n};\r\n"],"sourceRoot":""}