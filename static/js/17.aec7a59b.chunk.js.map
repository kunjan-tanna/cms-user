{"version":3,"sources":["views/pages/blogs/addPost.js"],"names":["colourStyles","control","styles","backgroundColor","option","data","isDisabled","isFocused","isSelected","color","chroma","alpha","css","contrast","cursor","AddPost","props","handleInput","event","persist","setState","prevState","formData","target","name","value","console","log","state","handleavtar","files","handleCKEditor","editor","getData","content","handleSelect","handleCreatableSelectTags","tags","map","item","handleFormSubmit","dispatch","localActions","then","res","toast","success","position","POSITION","BOTTOM_RIGHT","setTimeout","history","push","error","catch","handleReset","categories","date","Date","toLocaleDateString","userdata","userInfo","erroMsg","this","globalActions","tagActions","_id","fname","firstName","lname","lastName","sm","style","height","onSubmit","e","preventDefault","for","type","id","placeholder","onChange","rows","cols","required","ClassicEditor","onInit","cloudServices","tokenUrl","uploadUrl","toolbar","disabled","defaultValue","moment","format","isClearable","options","className","classNamePrefix","isMulti","Ripple","onClick","nextProps","updatedObject","length","label","categoryName","Object","assign","tagName","keys","React","Component","connect","global","auth","login"],"mappings":"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","file":"static/js/17.aec7a59b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, CardBody, Row, Col, CardHeader, CardTitle } from \"reactstrap\";\r\nimport { Button, Form, Input, Label, FormGroup, CustomInput } from \"reactstrap\";\r\nimport * as localActions from \"../../../redux/actions/posts/index\";\r\nimport * as globalActions from \"../../../redux/actions/categories/index\";\r\nimport * as tagActions from \"../../../redux/actions/tags/index\";\r\nimport { connect } from \"react-redux\";\r\nimport CreatableSelect from \"react-select/creatable\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../../assets/scss/plugins/extensions/toastr.scss\";\r\nimport Select from \"react-select\";\r\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\nimport { history } from \"../../../history\";\r\nimport chroma from \"chroma-js\";\r\nimport axios from \"../../../configs/axiosConfig\";\r\nimport moment from \"moment\";\r\n\r\nconst colourStyles = {\r\n  control: (styles) => ({ ...styles, backgroundColor: \"white\" }),\r\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n    const color = data.color ? chroma(data.color) : \"#7367f0\";\r\n    return {\r\n      ...styles,\r\n      backgroundColor: isDisabled\r\n        ? null\r\n        : isSelected\r\n        ? data.color\r\n        : isFocused\r\n        ? color.alpha(0.1).css()\r\n        : null,\r\n      color: isDisabled\r\n        ? \"#ccc\"\r\n        : isSelected\r\n        ? chroma.contrast(color, \"white\") > 2\r\n          ? \"white\"\r\n          : \"black\"\r\n        : data.color,\r\n      cursor: isDisabled ? \"not-allowed\" : \"default\",\r\n\r\n      \":active\": {\r\n        ...styles[\":active\"],\r\n        backgroundColor: !isDisabled && (isSelected ? data.color : \"#7367f0\"),\r\n      },\r\n    };\r\n  },\r\n};\r\n\r\nclass AddPost extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      categories: [],\r\n      tags: [],\r\n      date: new Date().toLocaleDateString(),\r\n      formData: {},\r\n      userdata: this.props.userInfo,\r\n      erroMsg: false,\r\n    };\r\n    console.log(\"Dateee-------------\", this.state.date);\r\n  }\r\n\r\n  //handleInput\r\n  handleInput = (event) => {\r\n    event.persist();\r\n    this.setState(\r\n      (prevState) => ({\r\n        formData: {\r\n          ...prevState.formData,\r\n          [event.target.name]: event.target.value,\r\n        },\r\n      }),\r\n      () => console.log(\"Name Input\", this.state.formData)\r\n    );\r\n  };\r\n\r\n  //handle avatar\r\n  handleavtar = (event) => {\r\n    event.persist();\r\n    this.setState((prevState) => ({\r\n      formData: {\r\n        ...prevState.formData,\r\n        [event.target.name]: event.target.files[0],\r\n      },\r\n    }));\r\n    //()=>console.log('-------FILE--',event.target.files[0])\r\n  };\r\n\r\n  //handle CKEditor\r\n  handleCKEditor = (event, editor, name) => {\r\n    console.log(\"event\", event);\r\n    const data = editor.getData();\r\n    this.setState(\r\n      (prevState) => ({\r\n        formData: {\r\n          ...prevState.formData,\r\n          content: data,\r\n        },\r\n      }),\r\n      console.log(\"Content\", this.state.formData)\r\n    );\r\n  };\r\n\r\n  //handle select\r\n  handleSelect = (name, data) => {\r\n    //  console.log('categories',typeof(data))\r\n    this.setState((prevState) => ({\r\n      formData: {\r\n        ...prevState.formData,\r\n        [name]: data.value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  handleCreatableSelectTags = (name, data) => {\r\n    // console.log('DATA',typeof([name]))\r\n    const tags = data && data.map((item) => item.value);\r\n    this.setState((prevState) => ({\r\n      formData: {\r\n        ...prevState.formData,\r\n        [name]: tags,\r\n      },\r\n    }));\r\n  };\r\n\r\n  //Handle Form Submit\r\n  handleFormSubmit = () => {\r\n    this.props\r\n      .dispatch(localActions.addPost(this.state.formData))\r\n      .then((res) => {\r\n        console.log(\"ADD POST Data\", res);\r\n        if (res.data) {\r\n          // Add success message in Toast\r\n          toast.success(\"Add Post Successfully\", {\r\n            position: toast.POSITION.BOTTOM_RIGHT,\r\n          });\r\n          setTimeout(() => {\r\n            history.push(\"/blog\");\r\n          }, 3000);\r\n        } else {\r\n          // show error message in Toast\r\n          toast.error(\"Something went wrong\", {\r\n            position: toast.POSITION.BOTTOM_RIGHT,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        // show error message in Toast\r\n        toast.error(\"Something went wrong\", {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n        });\r\n      });\r\n  };\r\n  componentDidMount() {\r\n    this.props.dispatch(globalActions.getCategory());\r\n    this.props.dispatch(tagActions.getTag());\r\n    this.setState((prevState) => ({\r\n      formData: {\r\n        ...prevState.formData,\r\n        [\"authorBy\"]: this.state.userdata._id,\r\n        [\"publishedAt\"]: this.state.date,\r\n      },\r\n    }));\r\n  }\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    const updatedObject = {};\r\n\r\n    // category\r\n    if (\r\n      nextProps.categories &&\r\n      nextProps.categories.length &&\r\n      nextProps.categories !== prevState.categories\r\n    ) {\r\n      const categories = nextProps.categories.map((item) => {\r\n        return {\r\n          label: item.categoryName,\r\n          value: item._id,\r\n          color: \"#7367f0\",\r\n        };\r\n      });\r\n      // console.log('nextprops',nextProps.categories)\r\n      Object.assign(updatedObject, { categories: categories });\r\n    }\r\n    // Tags\r\n    if (\r\n      nextProps.tags &&\r\n      nextProps.tags.length &&\r\n      nextProps.tags !== prevState.tags\r\n    ) {\r\n      const tags = nextProps.tags.map((item) => {\r\n        return {\r\n          label: item.tagName,\r\n          value: item._id,\r\n          //color: '#7367f0'\r\n        };\r\n      });\r\n      // console.log('----nexProps.tag',typeof(nextProps.tags))\r\n      Object.assign(updatedObject, { tags: tags });\r\n    }\r\n    return Object.keys(updatedObject).length !== 0 ? updatedObject : null;\r\n  }\r\n\r\n  //handle Reset\r\n  handleReset = () => {\r\n    this.setState({ formData: {} });\r\n  };\r\n\r\n  render() {\r\n    const fname = this.state.userdata.firstName;\r\n    const lname = this.state.userdata.lastName;\r\n    return (\r\n      <Row>\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Add Blog</CardTitle>\r\n            </CardHeader>\r\n            <CardBody style={{ height: \"1000px\" }}>\r\n              <Col sm=\"12\">\r\n                <Form\r\n                  onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    this.handleFormSubmit();\r\n                  }}\r\n                >\r\n                  <Row>\r\n                    <Col sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label for=\"title\">Title</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          id=\"title\"\r\n                          name=\"title\"\r\n                          placeholder=\"Title Name\"\r\n                          onChange={this.handleInput}\r\n                          //value={this.state.formData && this.state.formData.?this.state.formData.tagName:''}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label for=\"description\">Description</Label>\r\n                        <Input\r\n                          //value={this.state.formData && this.state.formData.message?this.state.formData.message:''}\r\n                          type=\"textarea\"\r\n                          name=\"description\"\r\n                          id=\"description\"\r\n                          rows=\"3\"\r\n                          cols=\"3\"\r\n                          required\r\n                          placeholder=\"Message\"\r\n                          onChange={this.handleInput}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label for=\"content\">Content</Label>\r\n                        <CKEditor\r\n                          editor={ClassicEditor}\r\n                          onInit={(editor) => {\r\n                            //Inialize our app\r\n                          }}\r\n                          onChange={this.handleCKEditor}\r\n                          // config={{\r\n                          //   simpleUpload: {\r\n                          //     uploadUrl: 'http://127.0.0.1/my-upload-endpoint'\r\n                          // }\r\n                          // }}\r\n                          cloudServices={{\r\n                            tokenUrl: \"https://example.com/cs-token-endpoint\",\r\n                            uploadUrl:\r\n                              \"https://your-organization-id.cke-cs.com/easyimage/upload/\",\r\n                          }}\r\n                          toolbar={\"imageUpload\"}\r\n                        />\r\n                        {/* {console.log('DATATATTA',ReactHtmlParser(this.state.data))} */}\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label for=\"publishedAt\">PublishedAt</Label>\r\n                        <Input\r\n                          //value={this.state.formData && this.state.formData.message?this.state.formData.message:''}\r\n                          type=\"date\"\r\n                          name=\"publishedAt\"\r\n                          id=\"publishedAt\"\r\n                          disabled\r\n                          defaultValue={\r\n                            moment(this.state.date).format(\"YYYY-MM-DD\")\r\n                              ? moment(this.state.date).format(\"YYYY-MM-DD\")\r\n                              : \"\"\r\n                          }\r\n                          placeholder=\"PublishAt\"\r\n                          // onChange={this.handleInput}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n\r\n                    <Col sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label for=\"image\">Image</Label>\r\n                        <CustomInput\r\n                          type=\"file\"\r\n                          id=\"image\"\r\n                          name=\"image\"\r\n                          onChange={this.handleavtar}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label for=\"Categories\">Categories</Label>\r\n                        <Select\r\n                          isClearable={false}\r\n                          styles={colourStyles}\r\n                          options={this.state.categories}\r\n                          className=\"React\"\r\n                          classNamePrefix=\"select\"\r\n                          id=\"categoryId\"\r\n                          name=\"categoryId\"\r\n                          onChange={(data) =>\r\n                            this.handleSelect(\"categoryId\", data)\r\n                          }\r\n                        />\r\n                        {/* {console.log('hdhdhdhhd',this.state.categories)} */}\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label for=\"Tags\">Tags</Label>\r\n                        <CreatableSelect\r\n                          isMulti\r\n                          isClearable={true}\r\n                          options={this.state.tags}\r\n                          className=\"React\"\r\n                          classNamePrefix=\"select\"\r\n                          id=\"tagId\"\r\n                          required\r\n                          name=\"tagId\"\r\n                          onChange={(data) =>\r\n                            this.handleCreatableSelectTags(\"tagId\", data)\r\n                          }\r\n                          //onChange={this.handleChange}\r\n                        />\r\n                        {/* {console.log('tags',this.state.tags)} */}\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label for=\"authorName\">Author By</Label>\r\n                        <Input\r\n                          type=\"disabled\"\r\n                          disabled\r\n                          value={fname + \" \" + lname}\r\n                          id=\"authorBy\"\r\n                          name=\"authorBy\"\r\n\r\n                          //onChange={this.handleInput}\r\n                          //   value={this.state.formData && this.state.formData.categoryName?this.state.formData.categoryName:''}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col\r\n                      className=\"d-flex justify-content-end flex-wrap mt-2\"\r\n                      sm=\"12\"\r\n                    >\r\n                      <Button.Ripple\r\n                        className=\"mr-1\"\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        //onClick={this.props.leadId}\r\n                      >\r\n                        Add Post\r\n                      </Button.Ripple>\r\n                      <ToastContainer />\r\n                      <Button.Ripple\r\n                        color=\"flat-warning\"\r\n                        onClick={() => this.handleReset()}\r\n                        type=\"button\"\r\n                      >\r\n                        Reset\r\n                      </Button.Ripple>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              </Col>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    categories: state.global.categories,\r\n    tags: state.global.tags,\r\n    userInfo: state.auth.login.userInfo,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(AddPost);\r\n"],"sourceRoot":""}