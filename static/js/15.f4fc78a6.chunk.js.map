{"version":3,"sources":["views/pages/Post.js"],"names":["Post","props","onChange","id","dispatch","globalActions","then","res","console","log","rowData","data","filter","item","authorBy","state","userdata","_id","map","index","count","setState","handleFilter","e","value","target","filteredData","length","startsWithCondition","toLowerCase","startsWith","includesCondition","includes","handleReset","formData","userInfo","columns","name","selector","maxWidth","sortable","cell","moment","createdAt","format","className","size","onClick","history","push","pathname","postId","this","status","noHeader","subHeader","React","Component","connect","auth","login"],"mappings":"8WAiCMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAoHRC,SAAW,SAACC,GAEV,EAAKF,MAAMG,SAASC,IAAyBF,IAAKG,MAAK,SAACC,GACtDC,QAAQC,IAAI,gBAAiBF,GAC7B,IAAIG,EAAUH,EAAII,KAAKC,QAAO,SAACC,GAE7B,GADAL,QAAQC,IAAI,OAAQI,GAChBA,EAAKC,WAAa,EAAKC,MAAMC,SAASC,IACxC,OAAOJ,KAaXL,QAAQC,IAAI,oBAAqBC,GACjCA,EAAQQ,KAAI,SAACL,EAAMM,GAEjBN,EAAKO,MAAQD,EAAQ,KAEvB,EAAKE,SAAS,CAAEX,gBA9ID,EAkJnBY,aAAe,SAACC,GACd,IAAIC,EAAQD,EAAEE,OAAOD,MACjBb,EAAO,EAAKI,MAAML,QACtBF,QAAQC,IAAI,MAAOE,GACnB,IAAIe,EAAe,EAAKX,MAAMW,aAC9B,EAAKL,SAAS,CAAEG,UAEZA,EAAMG,SACRD,EAAef,EAAKC,QAAO,SAACC,GAC1B,IAAIe,EAAsBf,EAAKH,QAC5BmB,cACAC,WAAWN,EAAMK,eAChBE,EAAoBlB,EAAKH,QAC1BmB,cACAG,SAASR,EAAMK,eAClB,OAAID,KAEQA,GAAuBG,EAC1BA,EACK,SAEhB,EAAKV,SAAS,CAAEK,mBAvKD,EA2KnBO,YAAc,WACZ,EAAKZ,SAAS,CAAEa,SAAU,MA1K1B,EAAKnB,MAAQ,CACXC,SAAU,EAAKf,MAAMkC,SACrBzB,QAAS,GACTU,MAAO,EAEPgB,QAAS,CACP,CACEC,KAAM,SACNC,SAAU,QACVC,SAAU,SAEZ,CACEF,KAAM,QACNC,SAAU,QACVE,UAAU,EACVD,SAAU,SAEZ,CACEF,KAAM,cACNC,SAAU,cACVE,UAAU,EACVD,SAAU,SAaZ,CACEF,KAAM,eACNC,SAAU,YACVE,UAAU,EACVD,SAAU,QACVE,KAAM,SAAC/B,GAEL,OAAOA,EAAO,UACPgC,IAAOhC,EAAQiC,WAAWC,OAAO,eACpC,KAGR,CACEP,KAAM,OACNC,SAAU,eACVE,UAAU,EACVD,SAAU,QACVE,KAAM,SAAC/B,GACL,OACE,yBAAKmC,UAAU,0BACb,kBAAC,IAAD,CACEA,UAAU,QACVC,KAAM,GACNC,QAAS,kBACPC,IAAQC,KAAK,CACXC,SAAU,aACVnC,MAAO,CAAEoC,OAAQzC,EAAUA,EAAQO,IAAM,YASvD,CACEoB,KAAM,SACNC,SAAU,eACVE,UAAU,EACVD,SAAU,QACVE,KAAM,SAAC/B,GACL,OACE,yBAAKmC,UAAU,0BACb,kBAAC,IAAD,CACEC,KAAM,GACNC,QAAS,WACP,EAAK7C,SAASQ,EAAQO,YASpCS,aAAc,GACdF,MAAO,IA5FQ,E,qLAgGjBhB,QAAQC,IAAI,QAAS2C,KAAKrC,MAAMC,UAChCoC,KAAKnD,MAAMG,SAASC,OAAyBC,MAAK,SAACC,GACjDC,QAAQC,IAAI,eAAgBF,GAE5B,IAAIG,EAAUH,EAAII,KAAKC,QAAO,SAACC,GAE7B,GADAL,QAAQC,IAAI,OAAQI,GAChBA,EAAKwC,QAAyB,GAAfxC,EAAKwC,QAClBxC,EAAKC,SAASG,MAAQ,EAAKF,MAAMC,SAASC,IAC5C,OAAOJ,KAIbL,QAAQC,IAAI,kBAAmBC,GAC/BA,EAAQQ,KAAI,SAACL,EAAMM,GAEjBN,EAAKO,MAAQD,EAAQ,KAEvB,EAAKE,SAAS,CAAEX,e,qIA6DV,IAAD,EACgC0C,KAAKrC,MAAtCqB,EADC,EACDA,QADC,EACQZ,MADR,EACeE,aACtB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,qBAWF,kBAAC,IAAD,CAAUmB,UAAU,eAClB,kBAAC,IAAD,CACEA,UAAU,mBAEVlC,KAAMyC,KAAKrC,MAAML,QACjB0B,QAASA,EACTkB,UAAQ,EAERC,WAAS,U,GAvMFC,IAAMC,WAsNVC,uBALS,SAAC3C,GACvB,MAAO,CACLoB,SAAUpB,EAAM4C,KAAKC,MAAMzB,YAGhBuB,CAAyB1D","file":"static/js/15.f4fc78a6.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Badge,\n  Input,\n  Button,\n  FormGroup,\n  Label,\n  Modal,\n  ModalHeader,\n  ModalBody,\n} from \"reactstrap\";\n\nimport DataTable from \"react-data-table-component\";\nimport { Star, Edit, Trash2, Search, Plus } from \"react-feather\";\nimport * as globalActions from \"../../redux/actions/posts/index\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport { history } from \"../../history\";\n\nconst CustomHeader = (props) => {\n  return (\n    <div className=\"position-relative has-icon-left mb-1\">\n      <Input value={props.value} onChange={(e) => props.handleFilter(e)} />\n      <div className=\"form-control-position\">\n        <Search size=\"15\" />\n      </div>\n    </div>\n  );\n};\nclass Post extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userdata: this.props.userInfo,\n      rowData: [],\n      count: 0,\n\n      columns: [\n        {\n          name: \"Number\",\n          selector: \"count\",\n          maxWidth: \"150px\",\n        },\n        {\n          name: \"Title\",\n          selector: \"title\",\n          sortable: true,\n          maxWidth: \"200px\",\n        },\n        {\n          name: \"Description\",\n          selector: \"description\",\n          sortable: true,\n          maxWidth: \"200px\",\n        },\n        // {\n        //   name: \"Category\",\n        //   selector: \"categoryId\",\n        //   sortable: true,\n        //   minWidth: \"200px\",\n        //   // cell : rowData =>{\n        //   //   return rowData && rowData.categoryId\n        //   //   ?`${rowData.categoryName}`\n        //   //   :''\n        //   // }\n        // },\n        {\n          name: \"Date Created\",\n          selector: \"createdAt\",\n          sortable: true,\n          maxWidth: \"200px\",\n          cell: (rowData) => {\n            // console.log('ksdjflksnf',rowData)\n            return rowData\n              ? `${moment(rowData.createdAt).format(\"MM-DD-YYYY\")}`\n              : \"\";\n          },\n        },\n        {\n          name: \"Edit\",\n          selector: \"transactions\",\n          sortable: true,\n          maxWidth: \"200px\",\n          cell: (rowData) => {\n            return (\n              <div className=\"actions cursor-pointer\">\n                <Edit\n                  className=\"mr-50\"\n                  size={15}\n                  onClick={() =>\n                    history.push({\n                      pathname: \"/edit/post\",\n                      state: { postId: rowData ? rowData._id : \"\" },\n                    })\n                  }\n                />\n                {/* {console.log('---lead ID',rowData)} */}\n              </div>\n            );\n          },\n        },\n        {\n          name: \"Delete\",\n          selector: \"transactions\",\n          sortable: true,\n          maxWidth: \"200px\",\n          cell: (rowData) => {\n            return (\n              <div className=\"actions cursor-pointer\">\n                <Trash2\n                  size={15}\n                  onClick={() => {\n                    this.onChange(rowData._id);\n                  }}\n                />\n              </div>\n            );\n          },\n        },\n      ],\n\n      filteredData: [],\n      value: \"\",\n    };\n  }\n  async componentDidMount() {\n    console.log(\"props\", this.state.userdata);\n    this.props.dispatch(globalActions.getPost()).then((res) => {\n      console.log(\"get POST----\", res);\n\n      let rowData = res.data.filter((item) => {\n        console.log(\"item\", item);\n        if (item.status && item.status == true) {\n          if (item.authorBy._id === this.state.userdata._id) {\n            return item;\n          }\n        }\n      });\n      console.log(\"GET FILTER DATA\", rowData);\n      rowData.map((item, index) => {\n        //console.log(item,index)\n        item.count = index + 1;\n      });\n      this.setState({ rowData });\n    });\n  }\n  // //delete data\n  onChange = (id) => {\n    // console.log('LEADID',id)\n    this.props.dispatch(globalActions.deletePost(id)).then((res) => {\n      console.log(\"RESPONSE-----\", res);\n      let rowData = res.data.filter((item) => {\n        console.log(\"item\", item);\n        if (item.authorBy === this.state.userdata._id) {\n          return item;\n        }\n      });\n      // let rowData = res.data.filter((item)=>{\n      //   console.log('DELTE item',item)\n      //   if(item.status && item.status == true){\n\n      //     if(item.authorBy._id === this.state.userdata._id)\n      //     {\n      //       return item\n      //     }\n      //     }\n      // })\n      console.log(\"DELTED AFTER Item\", rowData);\n      rowData.map((item, index) => {\n        // console.log(item,index)\n        item.count = index + 1;\n      });\n      this.setState({ rowData });\n    });\n  };\n\n  handleFilter = (e) => {\n    let value = e.target.value;\n    let data = this.state.rowData;\n    console.log(\"abc\", data);\n    let filteredData = this.state.filteredData;\n    this.setState({ value });\n\n    if (value.length) {\n      filteredData = data.filter((item) => {\n        let startsWithCondition = item.rowData\n          .toLowerCase()\n          .startsWith(value.toLowerCase());\n        let includesCondition = item.rowData\n          .toLowerCase()\n          .includes(value.toLowerCase());\n        if (startsWithCondition) {\n          return startsWithCondition;\n        } else if (!startsWithCondition && includesCondition) {\n          return includesCondition;\n        } else return null;\n      });\n      this.setState({ filteredData });\n    }\n  };\n  //handle Reset\n  handleReset = () => {\n    this.setState({ formData: {} });\n  };\n  render() {\n    let { columns, value, filteredData } = this.state;\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Manage Blog</CardTitle>\n          {/* <div className=\"d-flex flex-wrap flot-right\">\n            <Button.Ripple\n              color=\"primary\"\n              outline\n              onClick={() => this.props.history.push(\"/add/post\")}\n            >\n              Add Post\n            </Button.Ripple>\n          </div> */}\n        </CardHeader>\n        <CardBody className=\"rdt_Wrapper\">\n          <DataTable\n            className=\"dataTable-custom\"\n            //data={value.length ? filteredData : data}\n            data={this.state.rowData}\n            columns={columns}\n            noHeader\n            //pagination\n            subHeader\n            // subHeaderComponent={\n            //   <CustomHeader value={value} handleFilter={this.handleFilter} />\n            // }\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    userInfo: state.auth.login.userInfo,\n  };\n};\nexport default connect(mapStateToProps)(Post);\n"],"sourceRoot":""}