{"version":3,"sources":["views/pages/posts/editPost.js"],"names":["colourStyles","control","styles","backgroundColor","option","data","isDisabled","isFocused","isSelected","color","chroma","alpha","css","contrast","cursor","EditPost","props","handleInput","event","persist","setState","prevState","formData","target","name","value","console","log","state","handleavtar","files","onCheckChange","e","checked","handleCKEditor","editor","getData","content","handleSelect","handleChange","tag","newValue","tags","map","item","handleFormSubmit","objId","postId","dispatch","localActions","then","res","toast","success","position","POSITION","BOTTOM_RIGHT","setTimeout","history","push","error","catch","addTag","tagId","x","y","handleReset","location","commentId","userdata","userInfo","categories","erroMsg","this","globalActions","tagActions","sm","style","height","onSubmit","preventDefault","for","type","id","placeholder","onChange","title","description","rows","cols","required","ClassicEditor","moment","publishedAt","format","disabled","className","left","src","IMG","baseURL","image","alt","width","body","accept","isClearable","filter","categoryId","options","classNamePrefix","isMulti","Ripple","onClick","nextProps","updatedObject","length","label","categoryName","_id","Object","assign","tagName","keys","React","Component","connect","global","auth","login"],"mappings":"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","file":"static/js/18.3e8d3b93.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  CardHeader,\r\n  CardTitle,\r\n  Media,\r\n} from \"reactstrap\";\r\nimport { Button, Form, Input, Label, FormGroup, CustomInput } from \"reactstrap\";\r\nimport * as localActions from \"../../../redux/actions/posts/index\";\r\nimport { connect } from \"react-redux\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport * as globalActions from \"../../../redux/actions/categories/index\";\r\nimport * as tagActions from \"../../../redux/actions/tags/index\";\r\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../../assets/scss/plugins/extensions/toastr.scss\";\r\nimport CreatableSelect from \"react-select/creatable\";\r\nimport Select from \"react-select\";\r\nimport moment from \"moment\";\r\nimport chroma from \"chroma-js\";\r\nimport * as IMG from \"../../../configs/ImgConfig\";\r\nimport { history } from \"../../../history\";\r\n\r\nconst colourStyles = {\r\n  control: (styles) => ({ ...styles, backgroundColor: \"white\" }),\r\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n    const color = data.color ? chroma(data.color) : \"#7367f0\";\r\n    return {\r\n      ...styles,\r\n      backgroundColor: isDisabled\r\n        ? null\r\n        : isSelected\r\n        ? data.color\r\n        : isFocused\r\n        ? color.alpha(0.1).css()\r\n        : null,\r\n      color: isDisabled\r\n        ? \"#ccc\"\r\n        : isSelected\r\n        ? chroma.contrast(color, \"white\") > 2\r\n          ? \"white\"\r\n          : \"black\"\r\n        : data.color,\r\n      cursor: isDisabled ? \"not-allowed\" : \"default\",\r\n\r\n      \":active\": {\r\n        ...styles[\":active\"],\r\n        backgroundColor: !isDisabled && (isSelected ? data.color : \"#7367f0\"),\r\n      },\r\n    };\r\n  },\r\n};\r\nclass EditPost extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      postId:\r\n        this.props.location &&\r\n        this.props.location.state &&\r\n        this.props.location.state.postId\r\n          ? this.props.location.state.postId // you will get the edit Id here\r\n          : \"\",\r\n      commentId:\r\n        this.props.location &&\r\n        this.props.location.state &&\r\n        this.props.location.state.commentId\r\n          ? this.props.location.state.postId // you will get the edit Id here\r\n          : \"\",\r\n      formData: {},\r\n      userdata: this.props.userInfo,\r\n      categories: [],\r\n      tags: [],\r\n      checked: true,\r\n      erroMsg: false,\r\n    };\r\n    console.log(\"PROPS\", this.props);\r\n  }\r\n  //handleInput\r\n  handleInput = (event) => {\r\n    event.persist();\r\n    this.setState(\r\n      (prevState) => ({\r\n        formData: {\r\n          ...prevState.formData,\r\n          [event.target.name]: event.target.value,\r\n        },\r\n      }),\r\n      () => console.log(\"Name Input\", this.state.formData)\r\n    );\r\n  };\r\n  //handle avatar\r\n  handleavtar = (event) => {\r\n    event.persist();\r\n    this.setState((prevState) => ({\r\n      formData: {\r\n        ...prevState.formData,\r\n        [event.target.name]: event.target.files[0],\r\n      },\r\n    }));\r\n    //()=>console.log('-------FILE--',event.target.files[0])\r\n  };\r\n  //handle checked\r\n  onCheckChange = (e) => {\r\n    e.persist();\r\n    console.log(\"---checked switch\", typeof e.target.checked);\r\n    this.setState(\r\n      (prevState) => ({\r\n        formData: {\r\n          ...prevState.formData,\r\n          [e.target.name]: e.target.checked,\r\n        },\r\n      }),\r\n      () => console.log(\"-------SWITCH FORMDATA--\", e.target.name)\r\n    );\r\n  };\r\n  // //handle CKEditor\r\n  handleCKEditor = (event, editor, name) => {\r\n    console.log(\"event\", event);\r\n    const data = editor.getData();\r\n    this.setState(\r\n      (prevState) => ({\r\n        formData: {\r\n          ...prevState.formData,\r\n          content: data,\r\n        },\r\n      }),\r\n      () => console.log(\"Name content\", this.state.formData)\r\n    );\r\n  };\r\n  //handle select\r\n  handleSelect = (name, data) => {\r\n    //  console.log('categories',typeof(data))\r\n    this.setState(\r\n      (prevState) => ({\r\n        formData: {\r\n          ...prevState.formData,\r\n          [name]: data.value,\r\n        },\r\n      }),\r\n      () => {\r\n        console.log(\"---HANDLE--\", this.state.formData, name, data.value);\r\n      }\r\n    );\r\n  };\r\n  handleChange = (tag, newValue) => {\r\n    console.log(newValue);\r\n    const tags = newValue && newValue.map((item) => item.value);\r\n    this.setState({ value: newValue });\r\n    this.setState(\r\n      (prevState) => ({\r\n        formData: {\r\n          ...prevState.formData,\r\n          [tag]: tags,\r\n        },\r\n      }),\r\n      () => {\r\n        console.log(\r\n          \"---TAGS UPDATES--\",\r\n          this.state.formData,\r\n          tag,\r\n          newValue,\r\n          tags\r\n        );\r\n      }\r\n    );\r\n    //()=>{console.log(\"---TAGS UPDATES--\",this.state.formData,tag,newValue,tags)}\r\n    //console.log(`action: ${actionMeta.action}`);\r\n  };\r\n  //Handle Form Submit\r\n  handleFormSubmit = () => {\r\n    let objId = this.state.postId;\r\n    this.props\r\n      .dispatch(localActions.updatePost(objId, this.state.formData))\r\n      .then((res) => {\r\n        console.log(\"Update Data POST\", res);\r\n        if (res.data) {\r\n          // Add success message in Toast\r\n          toast.success(\"Update Post Successfully\", {\r\n            position: toast.POSITION.BOTTOM_RIGHT,\r\n          });\r\n          setTimeout(() => {\r\n            history.push(\"/post\");\r\n          }, 3000);\r\n        } else {\r\n          // show error message in Toast\r\n          toast.error(\"Something went wrong\", {\r\n            position: toast.POSITION.BOTTOM_RIGHT,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        // show error message in Toast\r\n        toast.error(\"Something went wrong\", {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n        });\r\n      });\r\n  };\r\n  componentDidMount() {\r\n    this.props.dispatch(globalActions.getCategory());\r\n    this.props.dispatch(tagActions.getTag());\r\n    this.props\r\n      .dispatch(localActions.getPostId(this.state.postId))\r\n      .then((res) => {\r\n        console.log(\"BY Id\", res);\r\n        if (res) {\r\n          this.setState({ formData: res.data }); //() => {console.log();}\r\n          this.addTag();\r\n        }\r\n      });\r\n  }\r\n  addTag = () => {\r\n    {\r\n      console.log(\"----this.value\", this.state.formData.tagId);\r\n    }\r\n    // {console.log('----this.tags',this.state.tags)}\r\n    let tags = [];\r\n    //let key = 1;\r\n    this.state.tags.map((x) => {\r\n      this.state.formData.tagId.map((y) => {\r\n        // console.log(\"------------\",this.state.formData.tag)\r\n        if (y == x.value) {\r\n          tags.push(x);\r\n        }\r\n      });\r\n    });\r\n    // tags.map(tag => {\r\n    //   tag.key = key;\r\n    // })\r\n    // console.log('yaaaaayy',tags)\r\n    this.setState({\r\n      value: tags,\r\n    });\r\n    // this.setState = ({\r\n    //   value : [...this.state.value, tags]\r\n    // })\r\n  };\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    const updatedObject = {};\r\n\r\n    // category\r\n    if (\r\n      nextProps.categories &&\r\n      nextProps.categories.length &&\r\n      nextProps.categories !== prevState.categories\r\n    ) {\r\n      const categories = nextProps.categories.map((item) => {\r\n        return {\r\n          label: item.categoryName,\r\n          value: item._id,\r\n          color: \"#7367f0\",\r\n        };\r\n      });\r\n      // console.log('nextprops',nextProps.categories)\r\n      Object.assign(updatedObject, { categories: categories });\r\n    }\r\n    // Tags\r\n    if (\r\n      nextProps.tags &&\r\n      nextProps.tags.length &&\r\n      nextProps.tags !== prevState.tags\r\n    ) {\r\n      const tags = nextProps.tags.map((item) => {\r\n        return {\r\n          label: item.tagName,\r\n          value: item._id,\r\n          //color: '#7367f0'\r\n        };\r\n      });\r\n      // console.log('----nexProps.tag',typeof(nextProps.tags))\r\n      Object.assign(updatedObject, { tags: tags });\r\n    }\r\n    return Object.keys(updatedObject).length !== 0 ? updatedObject : null;\r\n  }\r\n  //handle Reset\r\n  handleReset = () => {\r\n    this.setState({ formData: {} });\r\n  };\r\n  render() {\r\n    // const fname = this.state.formData.authorBy.firstName\r\n    // console.log(fname)\r\n    return (\r\n      <Row>\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Update Post</CardTitle>\r\n            </CardHeader>\r\n            <CardBody style={{ height: \"1000px\" }}>\r\n              <Col sm=\"12\">\r\n                <Form\r\n                  onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    this.handleFormSubmit();\r\n                  }}\r\n                >\r\n                  <Row>\r\n                    <Col sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label for=\"title\">Title</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          id=\"title\"\r\n                          name=\"title\"\r\n                          placeholder=\"Title Name\"\r\n                          onChange={this.handleInput}\r\n                          value={\r\n                            this.state.formData && this.state.formData.title\r\n                              ? this.state.formData.title\r\n                              : \"\"\r\n                          }\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label for=\"description\">Description</Label>\r\n                        <Input\r\n                          value={\r\n                            this.state.formData &&\r\n                            this.state.formData.description\r\n                              ? this.state.formData.description\r\n                              : \"\"\r\n                          }\r\n                          type=\"textarea\"\r\n                          name=\"description\"\r\n                          id=\"description\"\r\n                          rows=\"3\"\r\n                          cols=\"3\"\r\n                          required\r\n                          placeholder=\"Message\"\r\n                          onChange={this.handleInput}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label for=\"content\">Content</Label>\r\n                        {/* <Input\r\n                        //value={this.state.formData && this.state.formData.message?this.state.formData.message:''}\r\n                        type=\"textarea\"\r\n                        name=\"content\"\r\n                        id=\"content\"\r\n                        rows=\"3\"\r\n                        cols=\"3\"\r\n                        required\r\n                        placeholder=\"Message\"\r\n                        onChange={this.handleInput}\r\n                        /> */}\r\n                        <CKEditor\r\n                          editor={ClassicEditor}\r\n                          data={\r\n                            this.state.formData && this.state.formData.content\r\n                              ? this.state.formData.content\r\n                              : \"\"\r\n                          }\r\n                          //name=\"content\"\r\n\r\n                          onChange={this.handleCKEditor}\r\n                        />\r\n                        {/* {console.log('DATATATTA',ReactHtmlParser(this.state.data))} */}\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label for=\"publishedAt\">PublishedAt</Label>\r\n                        <Input\r\n                          value={\r\n                            this.state.formData &&\r\n                            moment(this.state.formData.publishedAt).format(\r\n                              \"YYYY-MM-DD\"\r\n                            )\r\n                              ? moment(this.state.formData.publishedAt).format(\r\n                                  \"YYYY-MM-DD\"\r\n                                )\r\n                              : \"\"\r\n                          }\r\n                          type=\"date\"\r\n                          name=\"publishedAt\"\r\n                          id=\"publishedAt\"\r\n                          disabled\r\n                          placeholder=\"PublishAt\"\r\n                          onChange={this.handleInput}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col className=\"pl-0\" sm=\"12\">\r\n                      <Media className=\"d-sm-flex d-block\">\r\n                        <Media className=\"mt-md-1 mt-0\" left>\r\n                          <Media\r\n                            className=\"rounded mr-2\"\r\n                            src={\r\n                              IMG.default.baseURL +\r\n                              \"/\" +\r\n                              this.state.formData.image\r\n                            }\r\n                            alt=\"Please Upload image\"\r\n                            height=\"112\"\r\n                            width=\"112\"\r\n                          />\r\n                        </Media>\r\n                        <Media body>\r\n                          <div className=\"mt-4\">\r\n                            <CustomInput\r\n                              accept=\"image/*\"\r\n                              src={this.state.formData.image}\r\n                              type=\"file\"\r\n                              id=\"image\"\r\n                              name=\"image\"\r\n                              onChange={this.handleavtar}\r\n                            />\r\n                            {/* {console.log('Image',this.state.formData.image)} */}\r\n                          </div>\r\n                        </Media>\r\n                      </Media>\r\n                    </Col>\r\n                    {/* <Col sm=\"12\">\r\n                    <FormGroup>\r\n                        \r\n                        <Media\r\n                          className=\"rounded mr-2\"\r\n                          object\r\n                          src={IMG.default.baseURL+'/'+this.state.formData.image}\r\n                          alt=\"Generic placeholder image\"\r\n                          height=\"112\"\r\n                          width=\"112\"\r\n                        />\r\n                         <Media body>\r\n                         <CustomInput\r\n                          type=\"file\"\r\n                          id=\"image\"\r\n                          name=\"image\"\r\n                          onChange={this.handleavtar}\r\n                        />\r\n                         </Media>\r\n                        \r\n                      </FormGroup>\r\n                    </Col> */}\r\n                    <Col sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label for=\"Categories\">Categories</Label>\r\n                        <Select\r\n                          isClearable={false}\r\n                          styles={colourStyles}\r\n                          value={\r\n                            this.state.categories &&\r\n                            this.state.categories.filter(\r\n                              (item) =>\r\n                                item.value === this.state.formData.categoryId\r\n                            )\r\n                          }\r\n                          options={this.state.categories}\r\n                          className=\"React\"\r\n                          classNamePrefix=\"select\"\r\n                          id=\"categoryId\"\r\n                          name=\"categoryId\"\r\n                          onChange={(data) =>\r\n                            this.handleSelect(\"categoryId\", data)\r\n                          }\r\n                        />\r\n                        {/* {console.log('hdhdhdhhd',this.state.categories)} */}\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label for=\"Tags\">Tags</Label>\r\n                        <CreatableSelect\r\n                          isMulti\r\n                          //key={this.addTag}\r\n                          onChange={(newValue) =>\r\n                            this.handleChange(\"tagId\", newValue)\r\n                          }\r\n                          options={this.state.tags}\r\n                          value={this.state.value}\r\n                          name=\"tagId\"\r\n                        />\r\n                        {/* {console.log('tags',this.state.tags)} */}\r\n                      </FormGroup>\r\n                    </Col>\r\n                    {/* <Col sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label for=\"Status\">Status</Label> <br />\r\n                        <CustomInput\r\n                          type=\"switch\"\r\n                          id=\"status\"\r\n                          name=\"status\"\r\n                          checked={\r\n                            this.state.formData && this.state.formData.status\r\n                              ? this.state.formData.status\r\n                              : \"\"\r\n                          }\r\n                          onChange={this.onCheckChange}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col> */}\r\n                    {/* <Col sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label for=\"authorName\">Author By</Label>\r\n                        <Input\r\n                          type=\"disabled\"\r\n                          disabled\r\n                          //value={fname + \" \" + lname}\r\n                          id=\"authorBy\"\r\n                          name=\"authorBy\"\r\n\r\n                          //onChange={this.handleInput}\r\n                          //   value={this.state.formData && this.state.formData.categoryName?this.state.formData.categoryName:''}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col> */}\r\n                    <Col\r\n                      className=\"d-flex justify-content-end flex-wrap mt-2\"\r\n                      sm=\"12\"\r\n                    >\r\n                      <Button.Ripple\r\n                        className=\"mr-1\"\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        //onClick={this.props.leadId}\r\n                      >\r\n                        Update Post\r\n                      </Button.Ripple>\r\n                      <ToastContainer />\r\n                      <Button.Ripple\r\n                        color=\"flat-warning\"\r\n                        onClick={() => this.handleReset()}\r\n                        type=\"button\"\r\n                      >\r\n                        Reset\r\n                      </Button.Ripple>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              </Col>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    categories: state.global.categories,\r\n    tags: state.global.tags,\r\n    userInfo: state.auth.login.userInfo,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(EditPost);\r\n"],"sourceRoot":""}